[package]
name = "battleship-ws-client"
version = "0.1.0"
authors = ["Remi Bernotavicius <remi@kunugiken.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.62"
js-sys = "0.3"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

battleship-game = { path = "../battleship-game", version = "0.1.0" }
serde = "*"
serde_json = "*"

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[dependencies.web-sys]
version = "0.3.22"
features = [
  "BinaryType",
  "Blob",
  "CanvasRenderingContext2d",
  "Document",
  "Element",
  "ErrorEvent",
  "FileReader",
  "History",
  "HtmlAnchorElement",
  "HtmlCanvasElement",
  "Location",
  "MessageEvent",
  "MouseEvent",
  "ProgressEvent",
  "UrlSearchParams",
  "WebSocket",
  "Window",
]
